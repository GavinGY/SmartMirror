C51 COMPILER V9.55   MAIN                                                                  11/28/2017 23:36:36 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\6_Output\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\Keil_C51\C51\BIN\C51.EXE 2_System\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\
                    -SpeechRecognition;.\1_Application;.\2_System;.\3_BoardDrive;.\4_FirmwareLib;.\5_ChipDrive;.\7_ReadMe) DEBUG OBJECTEXTEND
                    - PRINT(.\6_Output\Listings\main.lst) TABS(2) OBJECT(.\6_Output\Objects\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-V0.7语音识别模块驱动程序
   3          **  CPU: STC11L08XE
   4          **  晶振：22.1184MHZ
   5          **  波特率：9600 bit/S
   6          **  配套产品信息：YS-V0.7语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2013.9.13
  11          **  说明：口令模式： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          
  14          #include "StdBsp.h"                  //STD
  15          //#include "LaserPassingMaster.h"      //APP
  16          
  17          /************************************************************************************/
  18          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  19          //  LD_ASR_NONE:    表示没有在作ASR识别
  20          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  21          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  22          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  23          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  24          /***********************************************************************************/
  25          uint8 idata nAsrStatus=0; 
  26          void MCU_init(); 
  27          void ProcessInt0(); //识别处理函数
  28          void delay(unsigned long uldata);
  29          void User_handle(uint8 dat);//用户执行操作函数
  30          void Delay200ms();
  31          void Led_test(void);//单片机工作指示
  32          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  33          sbit LED=P4^2;//信号指示灯
  34          
  35          /***********************************************************
  36          * 名    称： void  main(void)
  37          * 功    能： 主函数 程序入口
  38          * 入口参数：  
  39          * 出口参数：
  40          * 说    明：           
  41          * 调用方法： 
  42          **********************************************************/ 
  43          void  main(void)
  44          {
  45   1        uint8 idata nAsrRes;
  46   1        uint8 i=0;
  47   1        Led_test();
  48   1        MCU_init();
  49   1        LD_Reset();
  50   1        UartIni(); /*串口初始化*/
  51   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  52   1        
  53   1        #ifdef TEST 
C51 COMPILER V9.55   MAIN                                                                  11/28/2017 23:36:36 PAGE 2   

  54   1          PrintCom("一级口令：小杰\r\n"); /*text.....*/
  55   1        PrintCom("二级口令：1、代码测试\r\n"); /*text.....*/
  56   1        PrintCom("  2、开发板验证\r\n"); /*text.....*/
  57   1        PrintCom("  3、开灯\r\n"); /*text.....*/
  58   1        PrintCom("  4、关灯\r\n"); /*text.....*/
  59   1        PrintCom("  5、北京\r\n"); /*text.....*/
  60   1        PrintCom("  6、上海\r\n"); /*text.....*/
  61   1        PrintCom("  7、广州\r\n"); /*text.....*/
  62   1        #endif
  63   1      
  64   1        while(1)
  65   1        {
  66   2          switch(nAsrStatus)
  67   2          {
  68   3            case LD_ASR_RUNING:
  69   3            case LD_ASR_ERROR:    
  70   3              break;
  71   3            case LD_ASR_NONE:
  72   3            {
  73   4              nAsrStatus=LD_ASR_RUNING;
  74   4              if (RunASR()==0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  75   4              {
  76   5                nAsrStatus = LD_ASR_ERROR;
  77   5              }
  78   4              break;
  79   4            }
  80   3            case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  81   3            {       
  82   4              nAsrRes = LD_GetResult();   /*获取结果*/
  83   4              User_handle(nAsrRes);//用户执行函数 
  84   4              nAsrStatus = LD_ASR_NONE;
  85   4              break;
  86   4            }
  87   3            case LD_ASR_FOUNDZERO:
  88   3            default:
  89   3            {
  90   4              nAsrStatus = LD_ASR_NONE;
  91   4              break;
  92   4            }
  93   3          }// switch        
  94   2        }// while
  95   1      
  96   1      }
  97          /***********************************************************
  98          * 名    称：   LED灯测试
  99          * 功    能： 单片机是否工作指示
 100          * 入口参数： 无 
 101          * 出口参数：无
 102          * 说    明：           
 103          **********************************************************/
 104          void Led_test(void)
 105          {
 106   1        LED=~ LED;
 107   1        Delay200ms();
 108   1        LED=~ LED;
 109   1        Delay200ms();
 110   1        LED=~ LED;
 111   1        Delay200ms();
 112   1        LED=~ LED;
 113   1        Delay200ms();
 114   1        LED=~ LED;
 115   1        Delay200ms();
C51 COMPILER V9.55   MAIN                                                                  11/28/2017 23:36:36 PAGE 3   

 116   1        LED=~ LED;
 117   1      }
 118          /***********************************************************
 119          * 名    称： void MCU_init()
 120          * 功    能： 单片机初始化
 121          * 入口参数：  
 122          * 出口参数：
 123          * 说    明：           
 124          * 调用方法： 
 125          **********************************************************/ 
 126          void MCU_init()
 127          {
 128   1        P0 = 0xff;
 129   1        P1 = 0xff;
 130   1        P2 = 0xff;
 131   1        P3 = 0xff;
 132   1        P4 = 0xff;
 133   1      
 134   1        P1M0=0XFF;  //P1端口设置为推挽输出功能，即提高IO口驱动能力，从驱动继电器模块工作
 135   1        P1M1=0X00;
 136   1      
 137   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 138   1        IE0=1;
 139   1        EX0=1;
 140   1        EA=1;
 141   1      }
 142          /***********************************************************
 143          * 名    称：  延时函数
 144          * 功    能：
 145          * 入口参数：  
 146          * 出口参数：
 147          * 说    明：           
 148          * 调用方法： 
 149          **********************************************************/ 
 150          void Delay200us()   //@22.1184MHz
 151          {
 152   1        unsigned char i, j;
 153   1        _nop_();
 154   1        _nop_();
 155   1        i = 5;
 156   1        j = 73;
 157   1        do
 158   1        {
 159   2          while (--j);
 160   2        } while (--i);
 161   1      }
 162          
 163          void  delay(unsigned long uldata)
 164          {
 165   1        unsigned int j  =  0;
 166   1        unsigned int g  =  0;
 167   1        while(uldata--)
 168   1        Delay200us();
 169   1      }
 170          
 171          void Delay200ms()   //@22.1184MHz
 172          {
 173   1        unsigned char i, j, k;
 174   1      
 175   1        i = 17;
 176   1        j = 208;
 177   1        k = 27;
C51 COMPILER V9.55   MAIN                                                                  11/28/2017 23:36:36 PAGE 4   

 178   1        do
 179   1        {
 180   2          do
 181   2          {
 182   3            while (--k);
 183   3          } while (--j);
 184   2        } while (--i);
 185   1      }
 186          
 187          
 188          /***********************************************************
 189          * 名    称：用户执行函数 
 190          * 功    能：识别成功后，执行动作可在此进行修改 
 191          * 入口参数： 无 
 192          * 出口参数：无
 193          * 说    明：           
 194          **********************************************************/
 195          void  User_handle(uint8 dat)
 196          {
 197   1           //UARTSendByte(dat);//串口识别码（十六进制）
 198   1           if(0==dat)
 199   1           {
 200   2              G0_flag=ENABLE;
 201   2            LED=0;
 202   2            PrintCom("收到\r\n"); /*text.....*/
 203   2           }
 204   1           else if(ENABLE==G0_flag)
 205   1           {  
 206   2              G0_flag=DISABLE;
 207   2              LED=1;
 208   2             switch(dat)       /*对结果执行相关操作,客户可删除Printcom 串口输出语句替换为其他需要控制的代码*/
 209   2              {
 210   3                case CODE_DMCS:     /*命令“测试”*/
 211   3                  PrintCom("“代码测试”命令识别成功\r\n"); /*text.....*/
 212   3                                 break;
 213   3                case CODE_KFBYZ:   /*命令“全开”*/
 214   3                  PrintCom("“开发板验证”命令识别成功\r\n"); /*text.....*/
 215   3                                 break;
 216   3                case CODE_KD:   /*命令“复位”*/        
 217   3                  PrintCom("“开灯”命令识别成功\r\n"); /*text.....*/
 218   3                                break;
 219   3                case CODE_GD:   /*命令“复位”*/        
 220   3                  PrintCom("“关灯”命令识别成功\r\n"); /*text.....*/
 221   3                                break;
 222   3                case CODE_BJ:   /*命令“复位”*/        
 223   3                  PrintCom("“北京”命令识别成功\r\n"); /*text.....*/
 224   3                                break;
 225   3                case CODE_SH:   /*命令“复位”*/        
 226   3                  PrintCom("“上海”命令识别成功\r\n"); /*text.....*/
 227   3                                break;
 228   3                case CODE_GZ:   /*命令“复位”*/        
 229   3                  PrintCom("“广州”命令识别成功\r\n"); /*text.....*/
 230   3                                break;                                                      
 231   3                    default:PrintCom("请重新识别发口令\r\n"); /*text.....*/break;
 232   3              } 
 233   2            } 
 234   1            else  
 235   1            {
 236   2              PrintCom("请说出一级口令\r\n"); /*text.....*/ 
 237   2            }
 238   1      }  

C51 COMPILER V9.55   MAIN                                                                  11/28/2017 23:36:36 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    405    ----
   CONSTANT SIZE    =    328    ----
   XDATA SIZE       =      1      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
